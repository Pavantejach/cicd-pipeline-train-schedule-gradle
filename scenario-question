In this scenario, developers have created the first prototype of the train-schedule app. They need you to create a Gradle build for it. The developers need this build to execute some automated tests that they have written. If the automated tests pass, the build needs to produce a packaged archive that includes the application code and its dependencies. The archive should be located in the project folder as dist/trainSchedule.zip.

In short, this automation needs to:

Have a build task that can be called to execute the entire build process
Execute some automated tests (the build should fail if any of the tests fail)
Package the code and its dependencies into a zip archive called dist/trainSchedule.zip

Configure git for ssh authentication with GitHub.com
Create a personal fork of the sample repository https://github.com/linuxacademy/cicd-pipeline-train-schedule-gradle
Clone your personal fork from GitHub
Initialize the project with gradle
Create a gradle build task
Include the com.moowork.node plugin in the gradle project
Execute automated tests as part of the build with the npm_test task
Create a task to generate a zip archive (dist/trainSchedule.zip) of the files that need to be deployed to production
Make sure task dependencies are set up so tasks execute in the correct order
Commit and push these changes to your GitHub fork
